# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-10 10:32
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.IntegerField(verbose_name='Limit')),
                ('period', models.IntegerField(verbose_name='Okres')),
                ('period_type', models.SmallIntegerField(choices=[(1, b'Godzin (-y)'), (3, b'Tygodnia (-dni)'), (4, b'Mieci\xc4\x85ca (-cy)'), (2, b'Doby / D\xc3\xb3b')], verbose_name='Typ okresu')),
            ],
            options={
                'verbose_name': 'Alarm',
                'verbose_name_plural': 'Alarmy',
            },
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nazwa modelu')),
                ('serial_number', models.CharField(max_length=255, verbose_name='Numer seryjny')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywny?')),
                ('detection_report_date', models.DateTimeField(verbose_name='Data wykrycia licznika przez AMI')),
            ],
            options={
                'verbose_name': 'Licznik',
                'verbose_name_plural': 'Liczniki',
            },
        ),
        migrations.CreateModel(
            name='MeterData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acq_time', models.DateTimeField(verbose_name='Data pomiaru')),
                ('cap_time', models.IntegerField(default=15, verbose_name='Cz\u0119stotliwo\u015b\u0107 pomiaru (minuty)')),
                ('flags', models.CharField(max_length=32, verbose_name='Flagi')),
                ('reason', models.SmallIntegerField(choices=[(0, 'Pomiar Automatyczny'), (1, 'Warto\u015b\u0107 wprowadzona r\u0119cznie')], default=0, verbose_name='Typ pomiaru')),
                ('scaler_scaler', models.IntegerField(verbose_name='Warto\u015b\u0107 normalizacji')),
                ('scaler_unit', models.SmallIntegerField(choices=[(0, 'KWh'), (1, 'MWH')], default=0, verbose_name='Jednostka')),
                ('value', models.BigIntegerField(verbose_name='Warto\u015b\u0107 pomiaru')),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.Meter', verbose_name='Licznik')),
            ],
            options={
                'verbose_name': 'Pomiar',
                'verbose_name_plural': 'Pomiary',
            },
        ),
        migrations.CreateModel(
            name='MeterObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=255, verbose_name='Alias')),
                ('description', models.CharField(max_length=500, verbose_name='Opis')),
                ('obis', models.CharField(max_length=32, verbose_name='OBIS')),
                ('frequency', models.SmallIntegerField(verbose_name='Cz\u0119stotliwo\u015b\u0107')),
                ('incremental_chart', models.BooleanField(default=True, verbose_name='Czy warto\u015b\u0107 w stosunku do poprzednego pomiaru wzros\u0142a?')),
                ('precision', models.SmallIntegerField(verbose_name='Precyzja')),
                ('unit', models.SmallIntegerField(verbose_name='Jednostka')),
            ],
            options={
                'verbose_name': 'Obiekt pomiaru',
                'verbose_name_plural': 'Obiekty pomiar\xf3w',
            },
        ),
        migrations.CreateModel(
            name='MeterPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Opis')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Adres')),
                ('ppe_code', models.CharField(max_length=255, verbose_name='Kod PPE')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywny?')),
                ('flags', models.CharField(blank=True, max_length=32, null=True, verbose_name='Flagi')),
                ('status_change_date', models.DateTimeField(verbose_name='Data ostatniej zmiany statusu')),
            ],
            options={
                'verbose_name': 'Punkt pomiaru',
                'verbose_name_plural': 'Punkty pomiaru',
            },
        ),
        migrations.CreateModel(
            name='MeterPointState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField(verbose_name='Rozpocz\u0105\u0142 dzia\u0142anie')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='Zako\u0144czy\u0142 dzia\u0142anie')),
                ('current_power_limit', models.IntegerField(verbose_name='Limit mocy')),
                ('start_value', models.IntegerField(default=0, verbose_name='Warto\u015b\u0107 pocz\u0105tkowa')),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.Meter', verbose_name='Licznik')),
                ('meter_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.MeterPoint', verbose_name='Punkt pomiaru')),
            ],
            options={
                'verbose_name': 'Stan punktu pomiaru',
                'verbose_name_plural': 'Stany punkt\xf3w pomiar\xf3w',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywna?')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adres')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nazwa')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numer seryjny')),
            ],
            options={
                'verbose_name': 'Stacja',
                'verbose_name_plural': 'Stacje',
            },
        ),
        migrations.CreateModel(
            name='TariffDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_hour', models.TimeField(verbose_name='Godzina startu')),
                ('end_hour', models.TimeField(verbose_name='Godzina ko\u0144ca')),
            ],
            options={
                'verbose_name': 'Definicja strefy czasowej',
                'verbose_name_plural': 'Definicje stref czasowych',
            },
        ),
        migrations.CreateModel(
            name='TariffZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa strefy')),
                ('obis', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Strefa czasowa',
                'verbose_name_plural': 'Strefy czasowe',
            },
        ),
        migrations.CreateModel(
            name='UserMeterPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main_meter_point', models.NullBooleanField(default=False, verbose_name='Licznik g\u0142\xf3wny?')),
                ('alias', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alias')),
                ('meter_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.MeterPoint', verbose_name='Punkt pomiaru')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='U\u017cytkownik')),
            ],
            options={
                'verbose_name': 'Punkt poboru energii - U\u017cytkownik',
                'verbose_name_plural': 'Punkty poboru energii - U\u017cytkownicy',
            },
        ),
        migrations.AddField(
            model_name='tariffdefinition',
            name='tariff_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.TariffZone', verbose_name='Strefa czasowa'),
        ),
        migrations.AddField(
            model_name='meterpointstate',
            name='tariff_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.TariffZone', verbose_name='Strefa czasowa'),
        ),
        migrations.AddField(
            model_name='meterpoint',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.Station', verbose_name='Stacja'),
        ),
        migrations.AddField(
            model_name='meterpoint',
            name='users',
            field=models.ManyToManyField(blank=True, through='structure.UserMeterPoint', to=settings.AUTH_USER_MODEL, verbose_name='U\u017cytkownicy'),
        ),
        migrations.AddField(
            model_name='meterdata',
            name='meter_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.MeterObject', verbose_name='Obiekt pomiaru'),
        ),
        migrations.AddField(
            model_name='meter',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.Station', verbose_name='Stacja'),
        ),
        migrations.AddField(
            model_name='alarm',
            name='meter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.Meter', verbose_name='Licznik'),
        ),
        migrations.AddField(
            model_name='alarm',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='U\u017cytkownik'),
        ),
    ]
